---
# tasks file for rl_veeam_install_proxy_components

- name: Create 'C:\Temp' directory if not exists
  ansible.windows.win_file:
    path: 'C:\Temp'
    state: directory
  vars:
    ansible_winrm_transport: 'kerberos'
    ansible_user: '{{ windows_domain_admin_username }}'
    ansible_password: '{{ windows_domain_admin_password }}'

- name: Copy Veeam Backup for M365 Licenses from SMB share \\{{ windows_smb_hostname }}\{{ windows_smb_share }} to Windows VM
  ansible.windows.win_copy:
    src: '\\{{ windows_smb_hostname }}\{{ windows_smb_share }}\dotnet-runtime-9.0.8-win-x64.exe'
    dest: '{{ veeam_install_tmp_folder }}'
    remote_src: true
  register: copy_lic_file_status
  vars:
    ansible_winrm_transport: 'kerberos'
    ansible_user: '{{ windows_domain_admin_username }}'
    ansible_password: '{{ windows_domain_admin_password }}'

- name: Check if .NET Runtime is already installed in version {{ dotnet_runtime_version }}
  ansible.windows.win_shell: |
    dotnet --list-runtimes | Select-String "Microsoft.NETCore.App {{ dotnet_runtime_version }}"
  register: dotnet_check
  ignore_errors: true
  vars:
      ansible_winrm_transport: 'kerberos'
      ansible_user: '{{ windows_domain_admin_username }}'
      ansible_password: '{{ windows_domain_admin_password }}'

- name: Install .NET Runtime silently version {{ dotnet_runtime_version }}
  ansible.windows.win_package:
    path: '{{ veeam_install_tmp_folder }}\dotnet-runtime-9.0.8-win-x64.exe'
    state: present
    arguments: '/quiet /norestart'
  when: dotnet_check.rc != 0
  register: dotnet_install_result
  vars:
    ansible_winrm_transport: 'kerberos'
    ansible_user: '{{ windows_domain_admin_username }}'
    ansible_password: '{{ windows_domain_admin_password }}'

- name: Authenticate with VSPC API to get access token
  ansible.builtin.uri:
    url: '{{ veeam_backup_server_api_url }}:4443/v8/token'
    validate_certs: false
    method: POST
    body:
      grant_type: 'password'
      disable_antiforgery_token: true
      username: '{{ windows_local_admin_new_vm_username }}'
      password: '{{ windows_local_admin_new_vm_password }}'
    body_format: form-urlencoded
    headers:
      Content-Type: 'application/x-www-form-urlencoded'
    return_content: yes
    status_code: 200
  register: auth_response
  delegate_to: localhost
  no_log: false

- name: Set access token as a temporary fact for this playbook run
  ansible.builtin.set_fact:
    access_token: '{{ auth_response.json.access_token }}'

- name: Install Veeam Proxy Components via REST API
  ansible.builtin.uri:
    url: '{{ veeam_backup_server_api_url }}:4443/v8/proxies'
    validate_certs: false
    method: POST
    body_format: json
    body:
      useDomainNetwork: true
      useInternetProxy: false
      operatingSystem: "Windows"
      id: "00000000-0000-0000-0000-000000000000"
      hostName: "{{ veeam_backup_proxies.ip }}"
      description: "{{ veeam_backup_proxies.description }}"
      port: 9193
      username: "{{ windows_local_admin_new_vm_username }}"
      password: "{{ windows_local_admin_new_vm_password }}"
      serviceAccountName: "{{ veeam_service_account_username }}"
      serviceAccountPassword: "{{ veeam_service_account_password }}"
      createServiceAccount: true
      enableNetworkThrottling: false
      attachUsedProxy: false
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ access_token }}"
    status_code: [200,201]
  register: proxy_install_result
  delegate_to: localhost
  no_log: false